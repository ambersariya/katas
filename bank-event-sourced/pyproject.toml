[tool.poetry]
name = "bank-event-sourced"
version = "0.1.0"
description = ""
authors = ["ambersariya <1080238+ambersariya@users.noreply.github.com>"]

[tool.poetry.dependencies]
python = "^3.9"
eventsourcing = "^9.2.16"

[tool.poetry.dev-dependencies]
pytest = "^7.1.3"
black = "^22.1.0"
flake8 = "^5.0.4"
mypy = "^0.971"
isort = "^5.10.1"
coverage = "^6.4.3"
pytest-mock = "^3.8.2"


[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"

# MyPy settings
[tool.mypy]
python_version = 3.10
ignore_missing_imports = true
show_error_codes = true
namespace_packages = true
strict_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
disallow_any_generics = true
check_untyped_defs = true
no_implicit_reexport = true
warn_unused_configs = true
disallow_subclassing_any = true
disallow_incomplete_defs = true
disallow_untyped_decorators = true
disallow_untyped_calls = true

# for strict mypy: (this is the tricky one :-))
disallow_untyped_defs = true
exclude = ['.venv/', 'tests/']


# Test Coverage Settings
[tool.coverage]
[tool.coverage.run]
source = [
    "src",
    #    "tests"
]
omit = [
    # omit anything in a .local directory anywhere
    '*/.local/*',
    # omit anything in a .venv directory anywhere
    '.venv/*',
    '__init__.py',
]
[tool.coverage.report]
skip_empty = true
exclude_lines = [
    # Skip any pass lines such as may be used for @abstractmethod
    '^\s*pass\s*$',
    '^\s*...\s*$',
    '@abstract*',
    '@abstractmethod',
    '@abc.abstractmethod',
    # Have to re-enable the standard pragma
    'pragma: no cover',
    # Don't complain about missing debug-only code:
    'def __repr__',
    'if self\.debug',
    # Don't complain if tests don't hit defensive assertion code:
    'raise AssertionError',
    'raise NotImplementedError',
    # Don't complain if non-runnable code isn't run:
    'if 0:',
    'if __name__ == .__main__.:'
]